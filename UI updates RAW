import tkinter as tk
from tkinter import ttk

# Define the settings dictionary with all 11 parameters for each building type
settings = {
    'A': {'Aw': 85, 'Uw': 0.4, 'Ar': 80, 'Ur': 0.15, 'T_sp': 288.15,
          'A_tank': 1, 'mass_of_water': 200, 'initial_tank_temp': 200,
          'on_threshold': 318.15, 'off_threshold': 333.15, 'City': 'Oslo'},
    'B': {'Aw': 135, 'Uw': 0.6, 'Ar': 120, 'Ur': 0.25, 'T_sp': 298.15,
          'A_tank': 1, 'mass_of_water': 200, 'initial_tank_temp': 200,
          'on_threshold': 318.15, 'off_threshold': 333.15, 'City': 'Cape Town'},
    'C': {'Aw': 180, 'Uw': 0.8, 'Ar': 160, 'Ur': 0.3, 'T_sp': 303.15,
          'A_tank': 1, 'mass_of_water': 200, 'initial_tank_temp': 200,
          'on_threshold': 318.15, 'off_threshold': 333.15, 'City': 'Nairobi'},
    'D': {'Aw': 132, 'Uw': 0.51, 'Ar': 120, 'Ur': 0.18, 'T_sp': 293.15,
          'A_tank': 1, 'mass_of_water': 200, 'initial_tank_temp': 200,
          'on_threshold': 318.15, 'off_threshold': 333.15, 'City': 'Edinburgh'},
}

root = tk.Tk()
root.title("Heat Pump Simulation")
root.geometry("900x600")

# Create and configure frames for parameter categories
frame_params = tk.Frame(root)
frame_params.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=20, pady=20)

# Separate frames for each category
building_params_frame = tk.LabelFrame(frame_params, text="Building Parameters", padx=10, pady=10)
building_params_frame.grid(row=0, column=0, padx=5, pady=5, sticky="ew")

tank_params_frame = tk.LabelFrame(frame_params, text="Tank Parameters", padx=10, pady=10)
tank_params_frame.grid(row=1, column=0, padx=5, pady=5, sticky="ew")

control_params_frame = tk.LabelFrame(frame_params, text="Simulation Control", padx=10, pady=10)
control_params_frame.grid(row=2, column=0, padx=5, pady=5, sticky="ew")

# Building Parameters
tk.Label(building_params_frame, text="Wall Area (m²):").grid(row=0, column=0, sticky='e')
Aw_entry = tk.Entry(building_params_frame, width=20)
Aw_entry.insert(0, "0")
Aw_entry.grid(row=0, column=1)

tk.Label(building_params_frame, text="Wall U-value (W/m²K):").grid(row=1, column=0, sticky='e')
Uw_entry = tk.Entry(building_params_frame, width=20)
Uw_entry.insert(0, "0")
Uw_entry.grid(row=1, column=1)

tk.Label(building_params_frame, text="Roof Area (m²):").grid(row=2, column=0, sticky='e')
Ar_entry = tk.Entry(building_params_frame, width=20)
Ar_entry.insert(0, "0")
Ar_entry.grid(row=2, column=1)

tk.Label(building_params_frame, text="Roof U-value (W/m²K):").grid(row=3, column=0, sticky='e')
Ur_entry = tk.Entry(building_params_frame, width=20)
Ur_entry.insert(0, "0")
Ur_entry.grid(row=3, column=1)

# Tank Parameters
tk.Label(tank_params_frame, text="Tank Surface Area (m²):").grid(row=0, column=0, sticky='e')
A_tank_entry = tk.Entry(tank_params_frame, width=20)
A_tank_entry.insert(0, "0")
A_tank_entry.grid(row=0, column=1)

tk.Label(tank_params_frame, text="Mass of Water in Tank (kg):").grid(row=1, column=0, sticky='e')
mass_of_water_entry = tk.Entry(tank_params_frame, width=20)
mass_of_water_entry.insert(0, "0")
mass_of_water_entry.grid(row=1, column=1)

tk.Label(tank_params_frame, text="Initial Tank Temperature (K):").grid(row=2, column=0, sticky='e')
initial_tank_temp_entry = tk.Entry(tank_params_frame, width=20)
initial_tank_temp_entry.insert(0, "0")
initial_tank_temp_entry.grid(row=2, column=1)

# Simulation Control Parameters
tk.Label(control_params_frame, text="Set Point Temperature (K):").grid(row=0, column=0, sticky='e')
T_sp_entry = tk.Entry(control_params_frame, width=20)
T_sp_entry.insert(0, "0")
T_sp_entry.grid(row=0, column=1)

tk.Label(control_params_frame, text="Heat Pump On Threshold (K):").grid(row=1, column=0, sticky='e')
on_threshold_entry = tk.Entry(control_params_frame, width=20)
on_threshold_entry.insert(0, "0")
on_threshold_entry.grid(row=1, column=1)

tk.Label(control_params_frame, text="Heat Pump Off Threshold (K):").grid(row=2, column=0, sticky='e')
off_threshold_entry = tk.Entry(control_params_frame, width=20)
off_threshold_entry.insert(0, "0")
off_threshold_entry.grid(row=2, column=1)

tk.Label(control_params_frame, text="Select City:").grid(row=3, column=0, sticky='e')
city_var = tk.StringVar(value="Edinburgh")
city_dropdown = ttk.Combobox(control_params_frame, textvariable=city_var, values=list(settings['A']['City']))
city_dropdown.grid(row=3, column=1)

# Function to set parameters from the dropdown menu
def set_parameters(params):
    Aw_entry.delete(0, tk.END)
    Aw_entry.insert(0, params['Aw'])
    Uw_entry.delete(0, tk.END)
    Uw_entry.insert(0, params['Uw'])
    Ar_entry.delete(0, tk.END)
    Ar_entry.insert(0, params['Ar'])
    Ur_entry.delete(0, tk.END)
    Ur_entry.insert(0, params['Ur'])
    T_sp_entry.delete(0, tk.END)
    T_sp_entry.insert(0, params['T_sp'])
    A_tank_entry.delete(0, tk.END)
    A_tank_entry.insert(0, params['A_tank'])
    mass_of_water_entry.delete(0, tk.END)
    mass_of_water_entry.insert(0, params['mass_of_water'])
    initial_tank_temp_entry.delete(0, tk.END)
    initial_tank_temp_entry.insert(0, params['initial_tank_temp'])
    on_threshold_entry.delete(0, tk.END)
    on_threshold_entry.insert(0, params['on_threshold'])
    off_threshold_entry.delete(0, tk.END)
    off_threshold_entry.insert(0, params['off_threshold'])
    city_var.set(params['City'])

# Dropdown for selecting building type
def create_parameter_dropdown(frame):
    dropdown = ttk.Combobox(frame, values=list(settings.keys()))
    dropdown.grid(pady=5, columnspan=2)

    def on_dropdown_select(event):
        selected_option = dropdown.get()
        if selected_option in settings:
            params = settings[selected_option]
            set_parameters(params)

    dropdown.bind("<<ComboboxSelected>>", on_dropdown_select)

param_dropdown_frame = tk.Frame(frame_params)
param_dropdown_frame.grid(row=3, column=0, columnspan=2, pady=10)
create_parameter_dropdown(param_dropdown_frame)

# Run the main UI loop
root.mainloop()
