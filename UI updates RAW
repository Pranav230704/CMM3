from matplotlib.figure import Figure

def run_simulation(Aw, Uw, Ar, Ur, T_sp, U_cond, T_cond, U_tank, A_tank, c_t, display_type):
    if not T_amb_list:
        print("Temperature data not available!")
        return
    
    heat_system = Heat_system(Aw, Uw, Ar, Ur, T_amb_list, T_sp, U_cond, T_cond, U_tank, A_tank, c_t)
    initial_tank_temp = 318.15  # Initial tank temperature in K
    time_values, T_tank_values, Q_hp_total, avg_cop = heat_system.solve_tank_temperature(initial_tank_temp)

    # Clear previous plots in tank_temp_frame and cop_frame
    for widget in tank_temp_frame.winfo_children():
        widget.destroy()
    for widget in cop_frame.winfo_children():
        widget.destroy()

    # Tank Temperature Plot
    fig_tank_temp = Figure(figsize=(5, 4), dpi=100)
    ax_tank_temp = fig_tank_temp.add_subplot(111)
    ax_tank_temp.plot(time_values / 3600, T_tank_values, label="Tank Temperature", linewidth=1.5)
    ax_tank_temp.axhline(y=60, color="red", linestyle="--", label="Heat Pump Off Threshold (60°C)")
    ax_tank_temp.axhline(y=40, color="blue", linestyle="--", label="Heat Pump On Threshold (40°C)")
    ax_tank_temp.set_xlabel("Time (hours)")
    ax_tank_temp.set_ylabel("Tank Temperature (°C)")
    ax_tank_temp.set_title("Tank Temperature Over Time")
    ax_tank_temp.legend(loc="upper right")
    ax_tank_temp.grid(True)

    # Embed Tank Temperature Plot in Tkinter
    canvas_tank_temp = FigureCanvasTkAgg(fig_tank_temp, master=tank_temp_frame)
    canvas_tank_temp.draw()
    canvas_tank_temp.get_tk_widget().pack()

    # COP Plot
    fig_cop = Figure(figsize=(5, 4), dpi=100)
    ax_cop = fig_cop.add_subplot(111)
    ax_cop.plot(time_values / 3600, heat_system.cop_values, label="COP", color="purple")
    ax_cop.set_xlabel("Time (hours)")
    ax_cop.set_ylabel("COP")
    ax_cop.set_title("Coefficient of Performance (COP) Over Time")
    ax_cop.legend()
    ax_cop.grid(True)

    # Embed COP Plot in Tkinter
    canvas_cop = FigureCanvasTkAgg(fig_cop, master=cop_frame)
    canvas_cop.draw()
    canvas_cop.get_tk_widget().pack()

    # Optional: Display total energy consumption as a label in Tkinter
    total_energy_label = tk.Label(root, text=f"Total Energy Consumption: {Q_hp_total / 3.6e6:.2f} kWh")
    total_energy_label.pack(pady=5)
